{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/gdo.js"],"names":["GDO","this","reset","_groups","_elements","groups","element","push","nodes","forEach","name","DAG","TAG","GRP","BEFORE","AFTER","group","takeField","field","Array","tag","before","after","concat","idx","_this","indexOf","Error","undefined","length","insertDAG","list","order","elements","_order22","edges","Object","keys","_toposort2","array","reverse","filter","match"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  GDO -- Group- and Dependency-based Ordering\n**  Copyright (c) 2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport toposort from \"toposort\"\n\n/*  the API class  */\nexport default class GDO {\n    constructor () {\n        this.reset()\n    }\n\n    /*  reset the instance  */\n    reset () {\n        this._groups   = []\n        this._elements = []\n    }\n\n    /*  configure all groups  */\n    groups (groups) {\n        this._groups = groups\n    }\n\n    /*  configure one element  */\n    element (element) {\n        this._elements.push(element)\n    }\n\n    /*  topologically order the elements by taking account\n        of tags, groups and dependencies  */\n    order () {\n        /*  determine all graph nodes  */\n        let nodes = {}\n        this._elements.forEach((element) => {\n            nodes[element.name] = true\n        })\n\n        /*  internal helper data structures  */\n        let DAG    = {}\n        let TAG    = {}\n        let GRP    = {}\n        let BEFORE = {}\n        let AFTER  = {}\n\n        /*  pre-fill all groups with sentinel elements to ensure that\n            a group dependency always has at least one element it can be\n            expanded to  */\n        this._groups.forEach((group) => {\n            GRP[group] = [ `@@@${group}` ]\n            nodes[`@@@${group}`] = true\n        })\n\n        /*  helper function for taking zero or more strings out of a field  */\n        let takeField = (field) => {\n            if (typeof field === \"object\" && field instanceof Array)\n                return field\n            else if (typeof field === \"string\")\n                return [ field ]\n            else\n                return []\n        }\n\n        /*  pass 1: iterate over all elements and pre-process information  */\n        this._elements.forEach((element) => {\n            /*  take information of element  */\n            let name   = element.name\n            let tag    = takeField(element.tag)\n            let before = takeField(element.before)\n            let after  = takeField(element.after)\n            let group  = element.group\n\n            /*  remember (a mutable copy of) after/before information  */\n            BEFORE[name] = [].concat(before)\n            AFTER[name]  = [].concat(after)\n\n            /*  remember mapping of tag to element  */\n            tag.forEach((tag) => {\n                let idx = this._groups.indexOf(tag)\n                if (idx > -1)\n                    throw new Error(`invalid tag (cannot be same name as group): \"${tag}\"`)\n                if (TAG[tag] === undefined)\n                    TAG[tag] = []\n                TAG[tag].push(name)\n            })\n\n            /*  remember group of module  */\n            if (group !== undefined) {\n                let idx = this._groups.indexOf(group)\n                if (idx === -1)\n                    throw new Error(`unknown group: \"${group}\"`)\n                GRP[group].push(name)\n                if (idx < this._groups.length - 1)\n                    BEFORE[name].push(this._groups[idx + 1])\n                if (idx > 0)\n                    AFTER[name].push(this._groups[idx - 1])\n            }\n        })\n\n        /*  helper function: insert edge into DAG  */\n        let insertDAG = (list, order) => {\n            list.forEach((element) => {\n                let elements\n                if (TAG[element] !== undefined)\n                    elements = TAG[element]\n                else if (GRP[element] !== undefined)\n                    elements = GRP[element]\n                else\n                    elements = [ element ]\n                elements.forEach((element) => {\n                    let [ before, after ] = order(element)\n                    if (nodes[before] === undefined)\n                        throw new Error(`unknown element: ${before}`)\n                    if (nodes[after] === undefined)\n                        throw new Error(`unknown element: ${after}`)\n                    if (DAG[before] === undefined)\n                        DAG[before] = {}\n                    DAG[before][after] = true\n                })\n            })\n        }\n\n        /*  pass 2: iterate over all elements and process \"after\" and \"before\" information  */\n        this._elements.forEach((element) => {\n            /*  take information of module  */\n            let name   = element.name\n            let before = BEFORE[name]\n            let after  = AFTER[name]\n\n            /*  insert all \"after\" dependencies into DAG\n                (as standard \"after\" dependencies)  */\n            insertDAG(after,  (element) => [ name, element ])\n\n            /*  insert all \"before\" dependencies into DAG\n                (as inverse \"after\" dependencies)  */\n            insertDAG(before, (element) => [ element, name ])\n        })\n\n        /*  determine resulting graph edges  */\n        let edges = []\n        Object.keys(DAG).forEach((before) => {\n            Object.keys(DAG[before]).forEach((after) => {\n                edges.push([ before, after ])\n            })\n        })\n\n        /*  perform a topological sorting of the graph  */\n        let order = toposort.array(Object.keys(nodes), edges).reverse()\n\n        /*  remove group sentinel values again  */\n        order = order.filter((element) => !element.match(/^@@@.+/))\n\n        /*  return the final ordered list of elements  */\n        return order\n    }\n}\n\n"]}